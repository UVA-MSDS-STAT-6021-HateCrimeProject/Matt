install.packages("glmnet")
x<-model.matrix(mpg~.,mtcars)[,-1]
y<-mtcars$mpg
pairs(x, lower.panel=NULL, main="Scatterplots of Predictors")
summary(glmnet)
glmnet
help(glmnet)
help(??glmnet)
set.seed(12)
train<-sample(1:nrow(x), nrow(x)/2)
test<-(-train)
y.test<-y[test]
set.seed(12)
cv.out<-cv.glmnet(x[train,],y[train],alpha=0)
bestlam<-cv.out$lambda.min
bestlam
plot(cv.out)
ridge.mod<-glmnet(x[train,],y[train],alpha=0,lambda=bestlam, thresh = 1e-14)
cv.out<-cv.glmnet(x[train,],y[train],alpha=0)
setwd("~/MSDS/_2020_Fall/STAT_6021/Module12")
data<-swiss
View(data)
names(swiss)
?swiss
View(data)
pr.out<-prcomp(swiss, scale=TRUE)
pr.out$center
pr.out$scale
pr.out$rotation
biplot(pr.out, scale=0)
plot(pve, ylim=c(0,1))
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", main="Scree Plot", ylim=c(0,1),type='b')
pr.out$rotation
pr.out$sdev
pr.var<-pr.out$sdev^2
pr.var
pve<-pr.var/sum(pr.var)
pve
plot(pve, ylim=c(0,1))
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", main="Scree Plot", ylim=c(0,1),type='b')
?swiss
plot(pve, ylim=c(0,1))
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", main="Scree Plot", ylim=c(0,1),type='b')
plot(cumsum(pve), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained", main="Cumulative Proportion", ylim=c(0,1),type='b')
?swiss
library(ISLR)
install.packages("ISLR")
data <- ISLR
data <- ISLR
data <- College
library(ISLR)
?College
attach(College)
data<-College
View(data)
setwd("~/MSDS/_2020_Fall/STAT_6021/_2_Project2/Matt")
library(dplyr)
elast_df <- read.csv('elasticity.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hc_df <- read.csv('hatecrimes.csv', header = TRUE, fileEncoding='UTF-8-BOM')
police_df <- read.csv('police_killings.csv', header = TRUE, fileEncoding='UTF-8-BOM')
state_map <- read.csv('mapping.csv', header = TRUE, fileEncoding='UTF-8-BOM')
gun_df <- read.csv('RAND_gun_ownership.csv', header = TRUE, fileEncoding='UTF-8-BOM')
fbi_2019 <- read.csv('2019_fbi.csv', header = TRUE, fileEncoding='UTF-8-BOM')
pol_count <- police_df %>% count(state)
pol_count
gun_df <- gun_df[gun_df$Year == 2016,]
gun_df
elast_df[1,] # state = abbrev
hc_df[1,] # state = full
police_df[1,] # state = abbrev
elast_df<-rename(elast_df, state_abbrev=state)
hc_df<-rename(hc_df, state_full=state)
police_df<-rename(police_df, state_abbrev=state)
gun_df<-rename(gun_df, state_full=STATE)
pol_count<-rename(pol_count, state_abbrev=state)
pol_count<-rename(pol_count, pk_count=n)
colnames(elast_df) # state = abbrev
colnames(hc_df) # state = full
colnames(police_df) # state = abbrev
colnames(state_map)
colnames(pol_count)
#elast_df<-left_join(elast_df, state_map, by = 'state_abbrev')
hc_df<-left_join(hc_df, state_map, by = 'state_full')
hc_df<-left_join(hc_df, elast_df, by = 'state_abbrev')
hc_df<-left_join(hc_df, gun_df, by = 'state_full')
hc_df<-left_join(hc_df, pol_count, by = 'state_abbrev')
hc_df<-left_join(hc_df, fbi_2019, by = 'state_full')
police_df<-left_join(police_df, state_map, by = 'state_abbrev')
elast_df[1,] # state = abbrev
hc_df[1,] # state = full
police_df[1,] # state = abbrev
police_df
df_full<-left_join(police_df, hc_df, by = 'state_full')
df_full
df_full<-df_full[ , !(names(df_full) %in% c('state_abbrev.x', 'confederate.x', 'confederate.y', 'state_abbrev.y'))]
hc_df[1,] # state = full
hc_df<-hc_df[!apply(hc_df['state_full'] == "", 1, all),]
is.factor(hc_df$confederate)
hc_df$confederate <- factor(hc_df$confederate, levels = c(0, 1), labels = c('No', 'Yes'))
is.factor(hc_df$universl)
hc_df$universl <- factor(hc_df$universl, levels = c(0, 1), labels = c('No', 'Yes'))
is.factor(hc_df$permit)
hc_df$permit <- factor(hc_df$permit, levels = c(0, 1), labels = c('No', 'Yes'))
hc_df$pk_count[is.na(hc_df$pk_count)] <- 0
hc_df$pk_percap <- hc_df$pk_count / hc_df$population
#hc_df$incidents <- as.numeric(hc_df$incidents)
#hc_df$pop_covered <- as.numeric(hc_df$pop_covered)
hc_df$fbi_2019_per100k <- hc_df$incidents/hc_df$pop_covered*100000
write.csv(hc_df, 'hate_crimes_full.csv', row.names=F)
write.csv(police_df, 'police_killings_full.csv', row.names=F)
library(dplyr)
elast_df <- read.csv('elasticity.csv', header = TRUE, fileEncoding='UTF-8-BOM')
library(glmnet)
library(faraway)
library(leaps)
hc_df<-read.csv('hate_crimes_full.csv', row.names = 'state_abbrev')
library(leaps)
hc_df<-read.csv('hate_crimes_full.csv', row.names = 'state_full')
setwd("~/MSDS/_2020_Fall/STAT_6021/_2_Project2/Mattv2")
hc_df<-read.csv('hate_crimes_full.csv', row.names = 'state_full')
View(hc_df)
View(hc_df)
hc_df<-hc_df[!apply(hc_df['state_full'] == "", 1, all),]
colnames(hc_df)
hc_df$confederate<-factor(hc_df$confederate)
hc_df$permit<-factor(hc_df$permit)
hc_df$universl<-factor(hc_df$universl)
hc_df<-hc_df[ , !(names(hc_df) %in% c('avg_hatecrimes_per_100k_fbi', 'state_full', 'FIP', 'Year',
'FIP	Year',	'HFR_se',	'Fem_FS_S',	'Male_FS_S',	'BRFSS',	'GALLUP',	'GSS',	'PEW',	'HuntLic',	'GunsAmmo',
'BackChk',	'PewQChng',	'BS1',	'BS2',	'BS3'))]
hc_df<-hc_df[!is.na(c(hc_df$hate_crimes_per_100k_splc,
hc_df$share_non_citizen)),]
hc_df<-hc_df[complete.cases(hc_df), ] # removes rows with NAs
nrow(hc_df)
x<-model.matrix(hate_crimes_per_100k_splc~share_unemployed_seasonal+
share_population_with_high_school_degree+
share_white_poverty+
share_non_white+
median_household_income+
share_population_in_metro_areas+
share_non_citizen+
gini_index+
gini_index+
elasticity+
confederate+
HFR+
universl+
permit, hc_df)[,-1] # remove the first column of 1s representing the intercept
y<-hc_df$hate_crimes_per_100k_splc
nrow(x)
pairs(x, lower.panel=NULL, main="Scatterplots of Predictors")
setwd("~/MSDS/_2020_Fall/STAT_6021/_2_Project2/Mattv2")
library(plyr) # to rename columns
library(tidyverse)
library(dplyr)
elast_df <- read.csv('elasticity.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hc_df <- read.csv('hatecrimes.csv', header = TRUE, fileEncoding='UTF-8-BOM')
police_df <- read.csv('police_killings.csv', header = TRUE, fileEncoding='UTF-8-BOM')
state_map <- read.csv('mapping.csv', header = TRUE, fileEncoding='UTF-8-BOM')
gun_df <- read.csv('RAND_gun_ownership.csv', header = TRUE, fileEncoding='UTF-8-BOM')
fbi_2019 <- read.csv('2019_fbi.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hate_group_df <- read.csv('hate_group_count.csv', header = TRUE, fileEncoding='UTF-8-BOM')
pol_count <- police_df %>% count(state)
View(police_df)
pol_count <- police_df %>% count(state)
pol_count <- police_df %>% count('state')
pol_count
library(plyr) # to rename columns
library(tidyverse)
library(dplyr)
elast_df <- read.csv('elasticity.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hc_df <- read.csv('hatecrimes.csv', header = TRUE, fileEncoding='UTF-8-BOM')
police_df <- read.csv('police_killings.csv', header = TRUE, fileEncoding='UTF-8-BOM')
state_map <- read.csv('mapping.csv', header = TRUE, fileEncoding='UTF-8-BOM')
gun_df <- read.csv('RAND_gun_ownership.csv', header = TRUE, fileEncoding='UTF-8-BOM')
fbi_2019 <- read.csv('2019_fbi.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hate_group_df <- read.csv('hate_group_count_2016.csv', header = TRUE, fileEncoding='UTF-8-BOM')
pol_count <- police_df %>% count('state')
pol_count
gun_df <- gun_df[gun_df$Year == 2016,]
gun_df
elast_df[1,] # state = abbrev
hc_df[1,] # state = full
police_df[1,] # state = abbrev
elast_df<-rename(elast_df, state_abbrev=state)
hc_df<-rename(hc_df, state_full=state)
police_df<-rename(police_df, state_abbrev=state)
gun_df<-rename(gun_df, state_full=STATE)
pol_count<-rename(pol_count, state_abbrev=state)
pol_count<-rename(pol_count, pk_count=n)
hate_group_df<-rename(hate_group_df, state_abbrev=State)
elast_df<-rename(elast_df, state_abbrev=state)
colnames(elast_df)
elast_df<-rename(elast_df, state=state_abbrev)
library(plyr) # to rename columns
library(tidyverse)
library(dplyr)
elast_df<-rename(elast_df, state_abbrev=state)
setwd("~/MSDS/_2020_Fall/STAT_6021/_2_Project2/Mattv2")
library(plyr) # to rename columns
library(tidyverse)
library(dplyr)
elast_df <- read.csv('elasticity.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hc_df <- read.csv('hatecrimes.csv', header = TRUE, fileEncoding='UTF-8-BOM')
police_df <- read.csv('police_killings.csv', header = TRUE, fileEncoding='UTF-8-BOM')
state_map <- read.csv('mapping.csv', header = TRUE, fileEncoding='UTF-8-BOM')
gun_df <- read.csv('RAND_gun_ownership.csv', header = TRUE, fileEncoding='UTF-8-BOM')
fbi_2019 <- read.csv('2019_fbi.csv', header = TRUE, fileEncoding='UTF-8-BOM')
hate_group_df <- read.csv('hate_group_count_2016.csv', header = TRUE, fileEncoding='UTF-8-BOM')
pol_count <- police_df %>% count('state')
pol_count
gun_df <- gun_df[gun_df$Year == 2016,]
gun_df
elast_df[1,] # state = abbrev
hc_df[1,] # state = full
police_df[1,] # state = abbrev
elast_df<-rename(elast_df, state_abbrev=state)
hc_df<-rename(hc_df, state_full=state)
police_df<-rename(police_df, state_abbrev=state)
gun_df<-rename(gun_df, state_full=STATE)
pol_count<-rename(pol_count, state_abbrev=state)
pol_count<-rename(pol_count, pk_count=n)
hate_group_df<-rename(hate_group_df, state_abbrev=State)
elast_df<-rename(elast_df, state_abbrev=state)
View(elast_df)
View(elast_df)
library(plyr) # to rename columns
library(tidyverse)
library(dplyr)
elast_df<-rename(elast_df, state_abbrev=state)
elast_df<-plyr::rename(elast_df, state_abbrev=state)
elast_df<-rename(elast_df, elast_df['state_abbrev']=state)
View(elast_df)
View(fbi_2019)
View(fbi_2019)
View(gun_df)
View(hate_group_df)
View(pol_count)
View(hate_group_df)
View(hate_group_df)
View(hc_df)
View(hate_group_df)
